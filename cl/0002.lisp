;;;;
;;;
;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(defun fib (n)
  "Calculate fib of n"
  (if (or (= n 0) (= n 1))
      1
      (+ (fib (- n 1)) (fib (- n 2)))))

(defun fibs-to (n &optional (cap 4000000))
  "Calculate and collect fibs to n"
  (let ((r '()))
    (loop for n from 0 to n do
	 (cond
	  ((= n 0) (push 1 r))
	  ((= n 1) (push 2 r))
	  ((> cap (first r)) (push (+ (first r) (second r)) r))
	  ((return (rest r)))) ;; Rest here bc if we end up here the last push on the list was > cap
	 finally (return r))))

;; Answer
;; 4613732
(format t "~a~%" (apply '+ (remove-if 'oddp (fibs-to 1000))))
